{"version":3,"sources":["components/sidemenu.jsx","components/menu.jsx","components/tile.jsx","components/lineGraph.jsx","components/scatterPlot.jsx","components/safety-measures.jsx","components/iconNText.jsx","animations/coronaChasingPerson.jsx","pages/first_page.jsx","App.js","serviceWorker.js","index.js"],"names":["Sidemenu","className","icon","faHome","size","faSearch","faMedkit","faSkullCrossbones","Component","Menu","Tile","Tile2","Tile3","Tile4","LineGraph","props","data","state","width","height","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","type","stroke","fillOpacity","fill","ScatterPlot","data01","data02","name","unit","range","cursor","strokeDasharray","SafetyMeasures","listOfMeasures","text","faPeopleArrows","faHandsWash","faHeadSideCoughSlash","map","item","index","CoronaChase","FirstPage","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sZAKaA,EAAb,uKAEQ,OACI,+BACI,wBAAIC,UAAW,aACX,4BACI,kBAAC,IAAD,CAAiBC,KAAMC,IAAQC,KAAM,OAEzC,4BACI,kBAAC,IAAD,CAAiBF,KAAMG,IAAUD,KAAM,OAE3C,4BACI,kBAAC,IAAD,CAAiBF,KAAMI,IAAUF,KAAM,OAE3C,4BACI,kBAAC,IAAD,CAAiBF,KAAMK,IAAmBH,KAAM,aAfxE,GAA8BI,aCFjBC,G,MAAb,uKAEQ,OACI,yBAAKR,UAAS,OACV,yBAAKA,UAAS,qBACV,gDACA,4CAEJ,yBAAKA,UAAS,aAAd,kBARhB,GAA0BO,cCAbE,G,OAAO,WAChB,OACI,yBAAKT,UAAW,QACZ,yBAAKA,UAAW,QAAhB,YAGA,yBAAKA,UAAU,QAAf,aAOCU,EAAQ,WACjB,OACI,yBAAKV,UAAW,SACZ,yBAAKA,UAAW,QAAhB,YAGA,yBAAKA,UAAU,QAAf,YAOCW,EAAQ,WACjB,OACI,yBAAKX,UAAW,SACZ,yBAAKA,UAAW,QAAhB,YAGA,yBAAKA,UAAU,QAAf,YAOCY,EAAQ,WACjB,OACI,yBAAKZ,UAAW,SACZ,yBAAKA,UAAW,QAAhB,YAGA,yBAAKA,UAAU,QAAf,Y,eC7CCa,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAkBVC,KAAO,CACH,CACI,KAAQ,SACR,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,IAAO,KAEX,CACI,KAAQ,SACR,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,IAAO,OAnDX,EAAKC,MAAQ,CAACC,MAAO,EAAGC,OAAQ,GAChC,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAHf,EADvB,gEAQQC,KAAKF,yBACLG,OAAOC,iBAAiB,SAAUF,KAAKF,0BAT/C,6CAaQG,OAAOE,oBAAoB,SAAUH,KAAKF,0BAblD,+CAiBQE,KAAKI,SAAS,CAACR,MAAOK,OAAOI,WAAYR,OAAQI,OAAOK,gBAjBhE,+BA2DQ,OACI,yBAAK3B,UAAS,cACV,kBAAC,IAAD,CAAWiB,MAAO,IAAKC,OAAQG,KAAKL,MAAME,OAAO,EAAGH,KAAMM,KAAKN,KACpDa,OAAQ,CAACC,IAAK,EAAGC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,IAEnD,8BACI,oCAAgBC,GAAG,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACjD,0BAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,0BAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,KAExD,oCAAgBP,GAAG,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACjD,0BAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,0BAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,MAG5D,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMC,KAAK,WAAWD,QAAQ,KAAKE,OAAO,UAAUC,YAAa,EAAGC,KAAI,wBA9E5F,GAA+BtC,aCAlBuC,G,OAAb,kDAEI,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IAiBViC,OAAS,CACL,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,MA/CM,EAkDnBC,OAAS,CACL,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,KAET,CACI,EAAK,IACL,EAAK,IACL,EAAK,MA7ET,EAAKhC,MAAQ,CAACC,MAAO,EAAGC,OAAQ,GAChC,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAHf,EAFvB,gEASQC,KAAKF,yBACLG,OAAOC,iBAAiB,SAAUF,KAAKF,0BAV/C,6CAcQG,OAAOE,oBAAoB,SAAUH,KAAKF,0BAdlD,+CAkBQE,KAAKI,SAAS,CAACR,MAAOK,OAAOI,WAAYR,OAAQI,OAAOK,gBAlBhE,+BAsFQ,OACI,yBAAK3B,UAAS,gBACV,kBAAC,IAAD,CAAciB,MAAO,IAAKC,OAAQG,KAAKL,MAAME,OAAS,EACxCU,OAAQ,CAACC,IAAK,GAAIC,MAAO,GAAIE,OAAQ,GAAID,KAAM,KAEzD,kBAAC,IAAD,CAAOU,QAAQ,IAAIQ,KAAK,UAAUC,KAAK,OACvC,kBAAC,IAAD,CAAOT,QAAQ,IAAIQ,KAAK,SAASC,KAAK,OACtC,kBAAC,IAAD,CAAOT,QAAQ,IAAIU,MAAO,CAAC,GAAI,KAAMF,KAAK,QAAQC,KAAK,OACvD,kBAAC,IAAD,CAASE,OAAQ,CAACC,gBAAiB,SACnC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAASJ,KAAK,WAAWlC,KAAMM,KAAK0B,OAAQF,KAAK,YACjD,kBAAC,IAAD,CAASI,KAAK,WAAWlC,KAAMM,KAAK2B,OAAQH,KAAK,kBAjGrE,GAAiCtC,cCEpB+C,G,OAAb,kDACI,aAAgB,IAAD,8BACX,gBACKtC,MAAQ,CACTuC,eAAgB,IAHT,EADnB,gEASQlC,KAAKI,SAAS,CACV8B,eAAgB,CACZ,CACIC,KAAM,YACNvD,KAAMC,KAEV,CACIsD,KAAM,gBACNvD,KAAMwD,KAEV,CACID,KAAM,aACNvD,KAAMyD,KAEV,CACIF,KAAM,mBACNvD,KAAM0D,UAzB1B,+BAgCQ,OACI,yBAAK3D,UAAS,iBACV,yBAAKA,UAAS,qBACV,+CACA,wCAAa,oCAEjB,yBAAKA,UAAS,cAENqB,KAAKL,MAAMuC,eAAeK,KAAI,SAACC,EAAMC,GAEjC,OC3CAN,ED2CmBK,EAAKL,KC3ClBvD,ED2CwB4D,EAAK5D,KCzCvD,yBAAKD,UAAS,kBACV,yBAAKA,UAAS,QACRwD,GAEN,yBAAKxD,UAAS,QACV,kBAAC,IAAD,CAAiBC,KAAMA,MAPZ,IAACuD,EAAMvD,WDClC,GAAoCM,cEFvBwD,G,OAAb,uKAEQ,OACI,yBAAK/D,UAAS,oBACV,yBAAKA,UAAU,UAAf,KACA,yBAAKA,UAAU,UAAf,UALhB,GAAiCO,cCQpByD,EAAb,uKAEQ,OACI,yBAAKhE,UAAS,aACV,yBAAKA,UAAW,WACZ,kBAAC,EAAD,OAEJ,yBAAKA,UAAS,oBACV,yBAAKA,UAAS,WAEV,kBAAC,EAAD,OAEJ,yBAAKA,UAAS,SAEV,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,yBAAKA,UAAS,UAEV,kBAAC,EAAD,MACA,yBAAKA,UAAS,cACV,kBAAC,EAAD,OAEJ,yBAAKA,UAAS,gBACV,kBAAC,EAAD,QAGR,+BAIJ,yBAAKA,UAAS,mBACV,kBAAC,EAAD,YAlCpB,GAA+BO,aCDhB0D,MANf,WACE,OACI,kBAAC,EAAD,OCMcC,QACW,cAA7B5C,OAAO6C,SAASC,UAEe,UAA7B9C,OAAO6C,SAASC,UAEhB9C,OAAO6C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.784da4f8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport './styles/sidemenu.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faDeaf, faHome, faMagic, faMedkit, faSearch, faSkullCrossbones} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport class Sidemenu extends Component {\r\n    render() {\r\n        return (\r\n            <aside>\r\n                <ul className={'side-menu'}>\r\n                    <li>\r\n                        <FontAwesomeIcon icon={faHome} size={200}/>\r\n                    </li>\r\n                    <li>\r\n                        <FontAwesomeIcon icon={faSearch} size={200} />\r\n                    </li>\r\n                    <li>\r\n                        <FontAwesomeIcon icon={faMedkit} size={200} />\r\n                    </li>\r\n                    <li>\r\n                        <FontAwesomeIcon icon={faSkullCrossbones} size={200} />\r\n                    </li>\r\n                </ul>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './styles/menu.scss';\r\n\r\nexport class Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className={`nav`}>\r\n                <div className={`dashboard-heading`}>\r\n                    <h4>Corona Dashboard</h4>\r\n                    <div>Statistics</div>\r\n                </div>\r\n                <div className={`time-span`}>\r\n                    This Week\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport './styles/tiles.scss';\r\n\r\nexport const Tile = () => {\r\n    return (\r\n        <div className={'tile'}>\r\n            <div className={\"head\"}>\r\n                'number'\r\n            </div>\r\n            <div className=\"stat\">\r\n                 'head'\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Tile2 = () => {\r\n    return (\r\n        <div className={'tile2'}>\r\n            <div className={\"head\"}>\r\n                'number'\r\n            </div>\r\n            <div className=\"stat\">\r\n                 'head'\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Tile3 = () => {\r\n    return (\r\n        <div className={'tile3'}>\r\n            <div className={\"head\"}>\r\n                'number'\r\n            </div>\r\n            <div className=\"stat\">\r\n                 'head'\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Tile4 = () => {\r\n    return (\r\n        <div className={'tile4'}>\r\n            <div className={\"head\"}>\r\n                'number'\r\n            </div>\r\n            <div className=\"stat\">\r\n                 'head'\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, {Component} from \"react\";\r\nimport {Area, AreaChart, CartesianGrid, Legend, Line, Tooltip, XAxis, YAxis} from \"recharts\";\r\n\r\nexport class LineGraph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {width: 0, height: 0};\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({width: window.innerWidth, height: window.innerHeight});\r\n    }\r\n\r\n    data = [\r\n        {\r\n            \"name\": \"Page A\",\r\n            \"pv\": 2400,\r\n            \"amt\": 2400\r\n        },\r\n        {\r\n            \"name\": \"Page B\",\r\n            \"pv\": 1398,\r\n            \"amt\": 2210\r\n        },\r\n        {\r\n            \"name\": \"Page C\",\r\n            \"pv\": 9800,\r\n            \"amt\": 2290\r\n        },\r\n        {\r\n            \"name\": \"Page D\",\r\n            \"pv\": 3908,\r\n            \"amt\": 2000\r\n        },\r\n        {\r\n            \"name\": \"Page E\",\r\n            \"pv\": 4800,\r\n            \"amt\": 2181\r\n        },\r\n        {\r\n            \"name\": \"Page F\",\r\n            \"pv\": 3800,\r\n            \"amt\": 2500\r\n        },\r\n        {\r\n            \"name\": \"Page G\",\r\n            \"pv\": 4300,\r\n            \"amt\": 2100\r\n        }\r\n    ];\r\n\r\n    render() {\r\n        return (\r\n            <div className={`area-chart`}>\r\n                <AreaChart width={730} height={this.state.height/2} data={this.data}\r\n                           margin={{top: 5, right: 5, left: 5, bottom: 5}}>\r\n                    {/*<CartesianGrid strokeDasharray=\"3 3\"/>*/}\r\n                    <defs>\r\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\r\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\r\n                        </linearGradient>\r\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\r\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                    <Legend/>\r\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" fillOpacity={1} fill={`url(#colorUv)`}/>\r\n                </AreaChart>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {CartesianGrid, Legend, Scatter, ScatterChart, Tooltip, XAxis, YAxis, ZAxis} from \"recharts\";\r\n\r\nexport class ScatterPlot extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {width: 0, height: 0};\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({width: window.innerWidth, height: window.innerHeight});\r\n    }\r\n    data01 = [\r\n        {\r\n            \"x\": 100,\r\n            \"y\": 200,\r\n            \"z\": 200\r\n        },\r\n        {\r\n            \"x\": 120,\r\n            \"y\": 100,\r\n            \"z\": 260\r\n        },\r\n        {\r\n            \"x\": 170,\r\n            \"y\": 300,\r\n            \"z\": 400\r\n        },\r\n        {\r\n            \"x\": 140,\r\n            \"y\": 250,\r\n            \"z\": 280\r\n        },\r\n        {\r\n            \"x\": 150,\r\n            \"y\": 400,\r\n            \"z\": 500\r\n        },\r\n        {\r\n            \"x\": 110,\r\n            \"y\": 280,\r\n            \"z\": 200\r\n        }\r\n    ];\r\n    data02 = [\r\n        {\r\n            \"x\": 200,\r\n            \"y\": 260,\r\n            \"z\": 240\r\n        },\r\n        {\r\n            \"x\": 240,\r\n            \"y\": 290,\r\n            \"z\": 220\r\n        },\r\n        {\r\n            \"x\": 190,\r\n            \"y\": 290,\r\n            \"z\": 250\r\n        },\r\n        {\r\n            \"x\": 198,\r\n            \"y\": 250,\r\n            \"z\": 210\r\n        },\r\n        {\r\n            \"x\": 180,\r\n            \"y\": 280,\r\n            \"z\": 260\r\n        },\r\n        {\r\n            \"x\": 210,\r\n            \"y\": 220,\r\n            \"z\": 230\r\n        }\r\n    ];\r\n\r\n    render() {\r\n        return (\r\n            <div className={`scatter-plot`}>\r\n                <ScatterChart width={730} height={this.state.height / 2}\r\n                              margin={{top: 20, right: 20, bottom: 10, left: 10}}>\r\n                    {/*<CartesianGrid strokeDasharray=\"3 3\"/>*/}\r\n                    <XAxis dataKey=\"x\" name=\"stature\" unit=\"cm\"/>\r\n                    <YAxis dataKey=\"y\" name=\"weight\" unit=\"kg\"/>\r\n                    <ZAxis dataKey=\"z\" range={[64, 144]} name=\"score\" unit=\"km\"/>\r\n                    <Tooltip cursor={{strokeDasharray: '3 3'}}/>\r\n                    <Legend/>\r\n                    <Scatter name=\"A school\" data={this.data01} fill=\"#8884d8\"/>\r\n                    <Scatter name=\"B school\" data={this.data02} fill=\"#82ca9d\"/>\r\n                </ScatterChart>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {Component} from \"react\";\r\nimport './styles/menu.scss';\r\nimport {faHandsWash, faHeadSideCoughSlash, faHome, faPeopleArrows} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {iconAndText} from \"./iconNText\";\r\n\r\nexport class SafetyMeasures extends Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            listOfMeasures: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            listOfMeasures: [\r\n                {\r\n                    text: 'Stay Home',\r\n                    icon: faHome\r\n                },\r\n                {\r\n                    text: 'Safe Distance',\r\n                    icon: faPeopleArrows\r\n                },\r\n                {\r\n                    text: 'Wash Hands',\r\n                    icon: faHandsWash\r\n                },\r\n                {\r\n                    text: 'Cover your cough',\r\n                    icon: faHeadSideCoughSlash\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className={`safety-header`}>\r\n                <div className={`dashboard-heading`}>\r\n                    <h4>Safety Measures</h4>\r\n                    <div>Source: <b>WHO</b></div>\r\n                </div>\r\n                <div className={`tiles-list`}>\r\n                    {\r\n                        this.state.listOfMeasures.map((item, index) => {\r\n                            /*console.log(item.text);*/\r\n                            return iconAndText(item.text, item.icon);\r\n                        })\r\n                    }\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport './styles/list.scss';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const iconAndText = (text, icon) => {\r\n    return (\r\n        <div className={`container-icon`}>\r\n            <div className={`text`}>\r\n                { text }\r\n            </div>\r\n            <div className={`icon`}>\r\n                <FontAwesomeIcon icon={icon} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, {Component} from \"react\";\r\nimport './styles/coronaChase.scss';\r\n\r\nexport class CoronaChase extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`coChaseContainer`}>\r\n                <div className=\"corona\"> </div>\r\n                <div className=\"person\"> </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {Sidemenu} from \"../components/sidemenu\";\r\nimport {Menu} from \"../components/menu\";\r\nimport {Tile, Tile2, Tile3, Tile4} from \"../components/tile\";\r\nimport {LineGraph} from \"../components/lineGraph\";\r\n\r\nimport './styles/first_page.scss';\r\nimport {ScatterPlot} from \"../components/scatterPlot\";\r\nimport {SafetyMeasures} from \"../components/safety-measures\";\r\nimport {CoronaChase} from \"../animations/coronaChasingPerson\";\r\n\r\nexport class FirstPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`container`}>\r\n                <div className={'sidebar'}>\r\n                    <Sidemenu/>\r\n                </div>\r\n                <div className={`middle-container`}>\r\n                    <div className={`nav-bar`}>\r\n                        {/* craze menu here */}\r\n                        <Menu/>\r\n                    </div>\r\n                    <div className={`tiles`}>\r\n                        {/* tiles here*/}\r\n                        <Tile/>\r\n                        <Tile2/>\r\n                        <Tile3/>\r\n                        <Tile4/>\r\n                    </div>\r\n                    <div className={`graphs`}>\r\n                        {/* graphs here */}\r\n                        <CoronaChase />\r\n                        <div className={`area-chart`}>\r\n                            <LineGraph />\r\n                        </div>\r\n                        <div className={`scatter-plot`}>\r\n                            <ScatterPlot />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {/* recommendations here */}\r\n                    </div>\r\n                </div>\r\n                <div className={`final-container`}>\r\n                    <SafetyMeasures />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {FirstPage} from \"./pages/first_page\";\n\nfunction App() {\n  return (\n      <FirstPage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}